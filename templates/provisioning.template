{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Outputs":{
      "StackEndpoint":{
         "Description":"Endpoint base path",
         "Value":{
            "Fn::Sub":"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
         }
      },
      "ProvisioningKey":{
         "Description":"Provisioning key",
         "Value":{
            "Fn::GetAtt":"ProvisioningKeyCustomResource.provisioningKey"
         }
      }
   },
   "Resources":{
      "StackAvailabilityFunction":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Code":{
               "S3Bucket":{
                  "Ref":"LambdaZipsBucket"
               },
               "S3Key":{
                  "Fn::Sub":"${QSS3KeyPrefix}functions/lambda.zip"
               }
            },
            "Tags":[
               {
                  "Value":"SAM",
                  "Key":"lambda:createdBy"
               }
            ],
            "Environment":{
               "Variables":{
                  "ProvisioningKeyTableName":{
                     "Ref":"ProvisioningKeyTable"
                  },
                  "AWSRegion":{
                     "Fn::Sub":"${AWS::Region}"
                  }
               }
            },
            "Handler":"handler.getStackAvailability",
            "Role":{
               "Fn::GetAtt":"ProvisioningLambdaRole.Arn"
            },
            "Timeout":6,
            "Runtime":"nodejs8.10"
         }
      },
      "StackAvailabilityFunctionStackAvailabilityPermissionProd":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"StackAvailabilityFunction"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/stack_availability",
                  {
                     "__Stage__":"Prod",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "ProvisioningLambdaRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "Policies":[
               {
                  "PolicyName":"LogPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Action":[
                              "logs:CreateLogGroup",
                              "logs:CreateLogStream",
                              "logs:PutLogEvents"
                           ],
                           "Resource":"*",
                           "Effect":"Allow"
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"DynamoDBPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Action":[
                              "dynamodb:GetItem",
                              "dynamodb:PutItem"
                           ],
                           "Resource":{
                              "Fn::GetAtt":"ProvisioningKeyTable.Arn"
                           },
                           "Effect":"Allow"
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"IoTPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Action":[
                              "iot:DescribeThing",
                              "iot:CreateThing",
                              "iot:CreateKeysAndCertificate",
                              "iot:AttachThingPrincipal",
                              "iot:AttachPolicy",
                              "iot:DescribeEndpoint",
                              "iot:DescribeRoleAlias",
                              "iot:CreateRoleAlias",
                              "iot:UpdateRoleAlias"
                           ],
                           "Resource":"*",
                           "Effect":"Allow"
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"KinesisVideoPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Action":[
                              "kinesisvideo:DescribeStream",
                              "kinesisvideo:CreateStream"
                           ],
                           "Resource":"*",
                           "Effect":"Allow"
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"IAMPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Action":[
                              "iam:PassRole"
                           ],
                           "Resource":{
                              "Fn::GetAtt":"CameraStreamingRole.Arn"
                           },
                           "Effect":"Allow"
                        }
                     ]
                  }
               }
            ],
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Action":"sts:AssumeRole",
                     "Effect":"Allow",
                     "Principal":{
                        "Service":"lambda.amazonaws.com"
                     }
                  }
               ]
            }
         }
      },
      "ServerlessRestApiDeploymente57a0bd809":{
         "Type":"AWS::ApiGateway::Deployment",
         "Properties":{
            "RestApiId":{
               "Ref":"ServerlessRestApi"
            },
            "Description":"RestApi deployment id: e57a0bd809f20ed30b41cef8c0ed49458587eab8",
            "StageName":"Stage"
         }
      },
      "StackAvailabilityFunctionStackAvailabilityPermissionTest":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"StackAvailabilityFunction"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/stack_availability",
                  {
                     "__Stage__":"*",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "IoTCameraPolicy":{
         "DeletionPolicy":"Retain",
         "Type":"AWS::IoT::Policy",
         "Properties":{
            "PolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Action":[
                        "iot:Connect"
                     ],
                     "Resource":"*",
                     "Effect":"Allow"
                  },
                  {
                     "Action":[
                        "iot:Publish"
                     ],
                     "Resource":[
                        {
                           "Fn::Join":[
                              "/",
                              [
                                 {
                                    "Fn::Sub":"arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things"
                                 },
                                 "${iot:Connection.Thing.ThingName}",
                                 "*"
                              ]
                           ]
                        },
                        {
                           "Fn::Join":[
                              "/",
                              [
                                 {
                                    "Fn::Sub":"arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/cameras"
                                 },
                                 "${iot:Connection.Thing.ThingName}",
                                 "*"
                              ]
                           ]
                        }
                     ],
                     "Effect":"Allow"
                  },
                  {
                     "Action":[
                        "iot:assumeRoleWithCertificate"
                     ],
                     "Resource":{
                        "Fn::GetAtt":"RoleAliasCustomResource.roleAliasArn"
                     },
                     "Effect":"Allow"
                  }
               ]
            }
         }
      },
      "ExampleCameraStatusLambdaCameraPairingPermissionProd":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"ExampleCameraStatusLambda"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/status",
                  {
                     "__Stage__":"Prod",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "ProvisionThingLambdaFunction":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Code":{
               "S3Bucket":{
                  "Ref":"LambdaZipsBucket"
               },
               "S3Key":{
                  "Fn::Sub":"${QSS3KeyPrefix}functions/lambda.zip"
               }
            },
            "Tags":[
               {
                  "Value":"SAM",
                  "Key":"lambda:createdBy"
               }
            ],
            "Environment":{
               "Variables":{
                  "CameraStreamingRoleAliasName":{
                     "Fn::GetAtt":"RoleAliasCustomResource.roleAlias"
                  },
                  "ProvisioningKeyTableName":{
                     "Ref":"ProvisioningKeyTable"
                  },
                  "AWSRegion":{
                     "Fn::Sub":"${AWS::Region}"
                  },
                  "IoTCameraPolicyName":{
                     "Ref":"IoTCameraPolicy"
                  }
               }
            },
            "Handler":"handler.provisionThing",
            "Role":{
               "Fn::GetAtt":"ProvisioningLambdaRole.Arn"
            },
            "Timeout":6,
            "Runtime":"nodejs8.10"
         }
      },
      "CameraStreamingRole":{
         "DeletionPolicy":"Retain",
         "Type":"AWS::IAM::Role",
         "Properties":{
            "Policies":[
               {
                  "PolicyName":"KVSPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":{
                        "Action":[
                           "kinesisvideo:DescribeStream",
                           "kinesisvideo:PutMedia",
                           "kinesisvideo:GetDataEndpoint"
                        ],
                        "Resource":{
                           "Fn::Join":[
                              "/",
                              [
                                 {
                                    "Fn::Sub":"arn:aws:kinesisvideo:${AWS::Region}:${AWS::AccountId}:stream"
                                 },
                                 "${credentials-iot:ThingName}",
                                 "*"
                              ]
                           ]
                        },
                        "Effect":"Allow"
                     }
                  }
               }
            ],
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":{
                  "Action":"sts:AssumeRole",
                  "Effect":"Allow",
                  "Principal":{
                     "Service":"credentials.iot.amazonaws.com"
                  }
               }
            }
         }
      },
      "ProvisioningKeyTable":{
         "Type":"AWS::DynamoDB::Table",
         "Properties":{
            "ProvisionedThroughput":{
               "WriteCapacityUnits":1,
               "ReadCapacityUnits":1
            },
            "AttributeDefinitions":[
               {
                  "AttributeName":"key",
                  "AttributeType":"S"
               }
            ],
            "KeySchema":[
               {
                  "KeyType":"HASH",
                  "AttributeName":"key"
               }
            ]
         }
      },
      "ExampleCameraStatusLambda":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Code":{
               "S3Bucket":{
                  "Ref":"LambdaZipsBucket"
               },
               "S3Key":{
                  "Fn::Sub":"${QSS3KeyPrefix}functions/lambda.zip"
               }
            },
            "Tags":[
               {
                  "Value":"SAM",
                  "Key":"lambda:createdBy"
               }
            ],
            "Environment":{
               "Variables":{
                  "ProvisioningKeyTableName":{
                     "Ref":"ProvisioningKeyTable"
                  },
                  "AWSRegion":{
                     "Fn::Sub":"${AWS::Region}"
                  }
               }
            },
            "Handler":"cameraHandler.status",
            "Role":{
               "Fn::GetAtt":"ProvisioningLambdaRole.Arn"
            },
            "Timeout":6,
            "Runtime":"nodejs8.10"
         }
      },
      "ExampleCameraPairingLambdaCameraPairingPermissionTest":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"ExampleCameraPairingLambda"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/pair",
                  {
                     "__Stage__":"*",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "ExampleCameraPairingLambdaCameraPairingPermissionProd":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"ExampleCameraPairingLambda"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/pair",
                  {
                     "__Stage__":"Prod",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "RoleAliasFunction":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Code":{
               "S3Bucket":{
                  "Ref":"LambdaZipsBucket"
               },
               "S3Key":{
                  "Fn::Sub":"${QSS3KeyPrefix}functions/lambda.zip"
               }
            },
            "Tags":[
               {
                  "Value":"SAM",
                  "Key":"lambda:createdBy"
               }
            ],
            "Environment":{
               "Variables":{
                  "ProvisioningKeyTableName":{
                     "Ref":"ProvisioningKeyTable"
                  },
                  "AWSRegion":{
                     "Fn::Sub":"${AWS::Region}"
                  }
               }
            },
            "Handler":"cfcustomresources/roleAlias.handler",
            "Role":{
               "Fn::GetAtt":"ProvisioningLambdaRole.Arn"
            },
            "Timeout":6,
            "Runtime":"nodejs8.10"
         }
      },
      "ProvisioningKeyCustomResource":{
         "Type":"Custom::ProvisioningKey",
         "Properties":{
            "CreateProvisioningKey":{
               "Ref":"CreateProvisioningKey"
            },
            "ServiceToken":{
               "Fn::GetAtt":"ProvisioningKeyFunction.Arn"
            },
            "ProvisioningKeyTableName":{
               "Ref":"ProvisioningKeyTable"
            }
         }
      },
      "ExampleCameraPairingLambda":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Code":{
               "S3Bucket":{
                  "Ref":"LambdaZipsBucket"
               },
               "S3Key":{
                  "Fn::Sub":"${QSS3KeyPrefix}functions/lambda.zip"
               }
            },
            "Tags":[
               {
                  "Value":"SAM",
                  "Key":"lambda:createdBy"
               }
            ],
            "Environment":{
               "Variables":{
                  "ProvisioningKeyTableName":{
                     "Ref":"ProvisioningKeyTable"
                  },
                  "AWSRegion":{
                     "Fn::Sub":"${AWS::Region}"
                  }
               }
            },
            "Handler":"cameraHandler.pair",
            "Role":{
               "Fn::GetAtt":"ProvisioningLambdaRole.Arn"
            },
            "Timeout":6,
            "Runtime":"nodejs8.10"
         }
      },
      "ProvisionThingLambdaFunctionProvisionThingPermissionProd":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"ProvisionThingLambdaFunction"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/provision",
                  {
                     "__Stage__":"Prod",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "ProvisioningKeyFunction":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Code":{
               "S3Bucket":{
                  "Ref":"LambdaZipsBucket"
               },
               "S3Key":{
                  "Fn::Sub":"${QSS3KeyPrefix}functions/lambda.zip"
               }
            },
            "Tags":[
               {
                  "Value":"SAM",
                  "Key":"lambda:createdBy"
               }
            ],
            "Environment":{
               "Variables":{
                  "ProvisioningKeyTableName":{
                     "Ref":"ProvisioningKeyTable"
                  },
                  "AWSRegion":{
                     "Fn::Sub":"${AWS::Region}"
                  }
               }
            },
            "Handler":"cfcustomresources/provisioningKey.handler",
            "Role":{
               "Fn::GetAtt":"ProvisioningLambdaRole.Arn"
            },
            "Timeout":6,
            "Runtime":"nodejs8.10"
         }
      },
      "ProvisionThingLambdaFunctionProvisionThingPermissionTest":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"ProvisionThingLambdaFunction"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/provision",
                  {
                     "__Stage__":"*",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      },
      "RoleAliasCustomResource":{
         "Type":"Custom::RoleAlias",
         "Properties":{
            "RoleArn":{
               "Fn::GetAtt":"CameraStreamingRole.Arn"
            },
            "ServiceToken":{
               "Fn::GetAtt":"RoleAliasFunction.Arn"
            },
            "RoleAlias":"camera-streaming-role-alias"
         }
      },
      "ServerlessRestApiProdStage":{
         "Type":"AWS::ApiGateway::Stage",
         "Properties":{
            "DeploymentId":{
               "Ref":"ServerlessRestApiDeploymente57a0bd809"
            },
            "RestApiId":{
               "Ref":"ServerlessRestApi"
            },
            "StageName":"Prod"
         }
      },
      "ServerlessRestApi":{
         "Type":"AWS::ApiGateway::RestApi",
         "Properties":{
            "Body":{
               "info":{
                  "version":"1.0",
                  "title":{
                     "Ref":"AWS::StackName"
                  }
               },
               "paths":{
                  "/status":{
                     "get":{
                        "x-amazon-apigateway-integration":{
                           "httpMethod":"POST",
                           "type":"aws_proxy",
                           "uri":{
                              "Fn::Sub":"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ExampleCameraStatusLambda.Arn}/invocations"
                           }
                        },
                        "responses":{

                        }
                     }
                  },
                  "/stack_availability":{
                     "get":{
                        "x-amazon-apigateway-integration":{
                           "httpMethod":"POST",
                           "type":"aws_proxy",
                           "uri":{
                              "Fn::Sub":"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StackAvailabilityFunction.Arn}/invocations"
                           }
                        },
                        "responses":{

                        }
                     }
                  },
                  "/provision":{
                     "post":{
                        "x-amazon-apigateway-integration":{
                           "httpMethod":"POST",
                           "type":"aws_proxy",
                           "uri":{
                              "Fn::Sub":"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProvisionThingLambdaFunction.Arn}/invocations"
                           }
                        },
                        "responses":{

                        }
                     }
                  },
                  "/pair":{
                     "put":{
                        "x-amazon-apigateway-integration":{
                           "httpMethod":"POST",
                           "type":"aws_proxy",
                           "uri":{
                              "Fn::Sub":"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ExampleCameraPairingLambda.Arn}/invocations"
                           }
                        },
                        "responses":{

                        }
                     }
                  }
               },
               "swagger":"2.0"
            }
         }
      },
      "ExampleCameraStatusLambdaCameraPairingPermissionTest":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Ref":"ExampleCameraStatusLambda"
            },
            "SourceArn":{
               "Fn::Sub":[
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/status",
                  {
                     "__Stage__":"*",
                     "__ApiId__":{
                        "Ref":"ServerlessRestApi"
                     }
                  }
               ]
            }
         }
      }
   },
   "Description":"AWS Connected Camera Provisioning SAM Template",
   "Parameters":{
      "CreateProvisioningKey":{
         "Default":"true",
         "Type":"String",
         "Description":"Whether to automatically create a provisioning key when launching the stack",
         "AllowedValues":[
            "true",
            "false"
         ]
      },
      "LambdaZipsBucket":{
         "Default":"",
         "Type":"String",
         "Description":"S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
      },
      "QSS3KeyPrefix":{
         "AllowedPattern":"^[0-9a-zA-Z-/]*$",
         "Default":"",
         "Type":"String",
         "Description":"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
         "ConstraintDescription":"Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
      }
   }
}
